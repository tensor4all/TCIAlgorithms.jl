var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = TCIAlgorithms","category":"page"},{"location":"#TCIAlgorithms","page":"Home","title":"TCIAlgorithms","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for TCIAlgorithms.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [TCIAlgorithms]","category":"page"},{"location":"#TCIAlgorithms.AbstractPatchCreator","page":"Home","title":"TCIAlgorithms.AbstractPatchCreator","text":"T: Float64, ComplexF64, etc. M: TensorCI2, MPS, etc.\n\n\n\n\n\n","category":"type"},{"location":"#TCIAlgorithms.BlockStructure","page":"Home","title":"TCIAlgorithms.BlockStructure","text":"Consists of a collection of non-overlapping blocks. The blocks do not nessarily have to cover the whole space.\n\n\n\n\n\n","category":"type"},{"location":"#TCIAlgorithms.LazyMatrixMul","page":"Home","title":"TCIAlgorithms.LazyMatrixMul","text":"Lazy evaluation for matrix multiplication of two TTOs\n\nThis is for the lazy evaluation of the matrix multiplication of two TTOs. If underlying data needs to be changed by projection, it will be copied.\n\nTODO: make immutable\n\n\n\n\n\n","category":"type"},{"location":"#TCIAlgorithms.PatchOrdering","page":"Home","title":"TCIAlgorithms.PatchOrdering","text":"Specify the ordering of patching\n\n\n\n\n\n","category":"type"},{"location":"#TCIAlgorithms.ProjTensorTrain","page":"Home","title":"TCIAlgorithms.ProjTensorTrain","text":"Represents a TensorTrain object which can be projected on a subset of indices\n\nCompared to TCI.TensorTrain, this object has additional functionalities:\n\nProjection\nMulti site indices per tensor are supported.\nFast evaluation by caching intermediate objects of contraction\n\n\n\n\n\n","category":"type"},{"location":"#TCIAlgorithms.ProjTensorTrain-Union{Tuple{N}, Tuple{T}, Tuple{TensorCrossInterpolation.TensorTrain{T, N}, TCIAlgorithms.Projector}} where {T, N}","page":"Home","title":"TCIAlgorithms.ProjTensorTrain","text":"The user must make sure that the data is compatible with the given projector. We do not recommend to use this function directly. Use project(ProjTensorTrain(tt), projector) instead.\n\n\n\n\n\n","category":"method"},{"location":"#TCIAlgorithms.ProjTensorTrain-Union{Tuple{T}, Tuple{TensorCrossInterpolation.TensorTrain{T, 3}, AbstractVector{<:AbstractVector{Int64}}, TCIAlgorithms.Projector}} where T","page":"Home","title":"TCIAlgorithms.ProjTensorTrain","text":"tt is a TensorTrain{T,3} and prj is a Projector. tt is defined on unprojected indices. Return a ProjTensorTrain{T} defined on full indices.\n\n\n\n\n\n","category":"method"},{"location":"#TCIAlgorithms.ProjectableEvaluator","page":"Home","title":"TCIAlgorithms.ProjectableEvaluator","text":"Represents an object that can be projected on a subset of indices\n\nAttributes:\n\nprojector: Projector object\nsitedims: Vector{Vector{Int}} of the dimensions of the local indices\n\n\n\n\n\n","category":"type"},{"location":"#TCIAlgorithms.ProjectableEvaluator-Union{Tuple{M}, Tuple{T}, Tuple{AbstractVector{Vector{Vector{Int64}}}, AbstractVector{Vector{Vector{Int64}}}, Val{M}}} where {T, M}","page":"Home","title":"TCIAlgorithms.ProjectableEvaluator","text":"This is similar to batchevaluateprj, but the evaluation is done on all M indices. In the returned array, the element evaluates to 0 for a indexset that is out of the projector.\n\n\n\n\n\n","category":"method"},{"location":"#TCIAlgorithms.ProjectableEvaluatorAdapter","page":"Home","title":"TCIAlgorithms.ProjectableEvaluatorAdapter","text":"Convert function f to a ProjectableEvaluator object\n\n\n\n\n\n","category":"type"},{"location":"#TCIAlgorithms._FuncAdapterTCI2Subset","page":"Home","title":"TCIAlgorithms._FuncAdapterTCI2Subset","text":"For TCI2\n\nf is a function that can be evaluated at full-length indices (including projected and non-projected indices). The wrapped function can be evaluated only on unprojected indices.\n\n\n\n\n\n","category":"type"},{"location":"#TCIAlgorithms._performmul!-Union{Tuple{T}, Tuple{TCIAlgorithms.TreeNode{Union{TCIAlgorithms.LazyMatrixMul{T}, TCIAlgorithms.ProjTensorTrain{T}}}, TCIAlgorithms.PatchOrdering}} where T","page":"Home","title":"TCIAlgorithms._performmul!","text":"Perform matrix multiplication of two tensor trains and if the bond dimension is too large, project the result to a lower bond dimension. We repeat this process until the bond dimension is small enough or no way to project more.\n\n\n\n\n\n","category":"method"},{"location":"#TCIAlgorithms.approxtt-Union{Tuple{TCIAlgorithms.ProjectableEvaluator{T}}, Tuple{T}} where T","page":"Home","title":"TCIAlgorithms.approxtt","text":"Compute a tensor train approximation of the object. The computation should be quick because the result will be used as initial guesses for the optimization. Override this function\n\n\n\n\n\n","category":"method"},{"location":"#TCIAlgorithms.batchevaluateprj-Union{Tuple{M}, Tuple{T}, Tuple{TCIAlgorithms.ProjectableEvaluator{T}, AbstractVector{Vector{Vector{Int64}}}, AbstractVector{Vector{Vector{Int64}}}, Val{M}}} where {T, M}","page":"Home","title":"TCIAlgorithms.batchevaluateprj","text":"Please override this funciton\n\nThis is similar to batch evaluation. The difference is as follows. If some of M central indices are projected, the evaluation is done on the projected indices. The sizes of the correponding indices in the returned array are set to 1.\n\nleftmmultiidxset and rightmmultiidxset are defined for unprojected and projected indices.\n\n\n\n\n\n","category":"method"},{"location":"#TCIAlgorithms.delete_node!-Union{Tuple{V}, Tuple{TCIAlgorithms.TreeNode{V}, Vector{Int64}}} where V","page":"Home","title":"TCIAlgorithms.delete_node!","text":"Remove a value at a given path\n\n\n\n\n\n","category":"method"},{"location":"#TCIAlgorithms.delete_value!-Union{Tuple{V}, Tuple{TCIAlgorithms.TreeNode{V}, Vector{Int64}, V}} where V","page":"Home","title":"TCIAlgorithms.delete_value!","text":"Remove a value at a given path\n\n\n\n\n\n","category":"method"},{"location":"#TCIAlgorithms.fulllength_leftmmultiidxset-Tuple{TCIAlgorithms.Projector, AbstractVector{Vector{Int64}}}","page":"Home","title":"TCIAlgorithms.fulllength_leftmmultiidxset","text":"leftmmultiidxset: Vector of indices on unprojected indices Returns: Vector of indices on projected and unprojected indices\n\n\n\n\n\n","category":"method"},{"location":"#TCIAlgorithms.fulltensor-Union{Tuple{TCIAlgorithms.ProjTensorTrain{T}}, Tuple{T}} where T","page":"Home","title":"TCIAlgorithms.fulltensor","text":"Evaluate obj at all possible indexsets and return a full tensor if reducesitedims is true, in the returned tensor, the dimensions of the projected site indices are reduced to 1.\n\n\n\n\n\n","category":"method"},{"location":"#TCIAlgorithms.fulltensor-Union{Tuple{TCIAlgorithms.ProjectableEvaluator{T}}, Tuple{T}} where T","page":"Home","title":"TCIAlgorithms.fulltensor","text":"Evaluate obj at all possible indexsets and return a full tensor\n\n\n\n\n\n","category":"method"},{"location":"#TCIAlgorithms.maskactiveindices-Tuple{TCIAlgorithms.PatchOrdering, Int64}","page":"Home","title":"TCIAlgorithms.maskactiveindices","text":"n is the length of the prefix.\n\n\n\n\n\n","category":"method"},{"location":"#TCIAlgorithms.matmul-Union{Tuple{T}, Tuple{TCIAlgorithms.ProjContainer{T, TCIAlgorithms.ProjTensorTrain{T}}, TCIAlgorithms.ProjContainer{T, TCIAlgorithms.ProjTensorTrain{T}}, TCIAlgorithms.BlockStructure}} where T","page":"Home","title":"TCIAlgorithms.matmul","text":"Perform matrix multiplication of two tensor trains and project the result to a block structure.\n\n\n\n\n\n","category":"method"},{"location":"#TCIAlgorithms.project-Union{Tuple{T}, Tuple{TCIAlgorithms.ProjectableEvaluator{T}, TCIAlgorithms.Projector}} where T","page":"Home","title":"TCIAlgorithms.project","text":"Project the object on the overlap of prj and obj.projector.\n\nThe requirement for the implementation is that the projector of the returned object is a subset of prj.\n\n\n\n\n\n","category":"method"},{"location":"#TCIAlgorithms.project_on_subsetsiteinds-Union{Tuple{TCIAlgorithms.ProjTensorTrain{T}}, Tuple{T}} where T","page":"Home","title":"TCIAlgorithms.project_on_subsetsiteinds","text":"Project the tensor train on the subset of site indices. The returned tensor train object has the number of site indices equal to the number of the unprojected subset in the input. The dimension of the unprojected site indices are the same as the original ones, i.e., before the projection. On each tensor core in the input tensor train, site indices are either projected or not projected. The data will be copied, and in the returned tensor train, the site indices are fused.\n\n\n\n\n\n","category":"method"}]
}
